<?php
namespace aura\view;

/**
 * Test class for Plugin.
 * Generated by PHPUnit on 2011-03-27 at 14:44:02.
 */
class PluginTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Plugin
     */
    protected $plugin;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        parent::setUp();
        $this->plugin = new MockPlugin;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        parent::tearDown();
    }
    
    public function testEscape()
    {
        $raw = '<\'single\' "double">';
        $expect = '&lt;&#039;single&#039; &quot;double&quot;&gt;';
        $actual = $this->plugin->escape($raw);
        $this->assertSame($expect, $actual);
        
        $this->plugin->setEscapeQuotes(ENT_COMPAT);
        $raw = '<\'single\' "double">';
        $expect = '&lt;\'single\' &quot;double&quot;&gt;';
        $actual = $this->plugin->escape($raw);
        $this->assertSame($expect, $actual);
        
        // should add some alternative chars here (like euro sign)
        $this->plugin->setEscapeCharset('ISO-8859-15');
        $raw = '<\'single\' "double">';
        $expect = '&lt;\'single\' &quot;double&quot;&gt;';
        $actual = $this->plugin->escape($raw);
        $this->assertSame($expect, $actual);
    }
    
    public function testAttribs()
    {
        $attribs = array(
            'foo' => 'bar',
            'nim' => '',
            'baz' => array('dib', 'zim', 'gir'),
            'required' => true,
            'optional' => false,
        );
        
        $expect = ' foo="bar" baz="dib zim gir" required';
        $actual = $this->plugin->attribs($attribs);
        $this->assertSame($expect, $actual);
    }
    
    public function test__invoke()
    {
        $plugin = $this->plugin;
        $actual = $plugin();
        $expect = "Hello Plugin";
        $this->assertSame($expect, $actual);
    }
}
