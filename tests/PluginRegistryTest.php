<?php
namespace aura\view;

use aura\di\Forge;
use aura\di\Config;

/**
 * Test class for PluginRegistry.
 * Generated by PHPUnit on 2011-03-27 at 14:44:05.
 */
class PluginRegistryTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var PluginRegistry
     */
    protected $registry;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        parent::setUp();
    }

    protected function newRegistry(array $map = array())
    {
        $forge = new Forge(new Config);
        return new PluginRegistry($forge, $map);
    }
    
    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        parent::tearDown();
    }

    /**
     * @todo Implement testGet().
     */
    public function testGet()
    {
        $map = array('mockPlugin' => 'aura\view\MockPlugin');
        $registry = $this->newRegistry($map);
        
        // can we get the plugin?
        $first = $registry->get('mockPlugin');
        $this->assertType('aura\view\MockPlugin', $first);
        
        // is it always the same?
        $again = $registry->get('mockPlugin');
        $this->assertSame($first, $again);
    }
    
    public function testGetClosure()
    {
        $map = array('mockPlugin' => function() {
            return new \aura\view\MockPlugin;
        });
        
        $registry = $this->newRegistry($map);
        
        // can we get the plugin?
        $first = $registry->get('mockPlugin');
        $this->assertType('aura\view\MockPlugin', $first);
        
        // is it always the same?
        $again = $registry->get('mockPlugin');
        $this->assertSame($first, $again);
    }
    
    /**
     * @expectedException aura\view\Exception_PluginNotMapped
     */
    public function testGetUnmappedPlugin()
    {
        $registry = $this->newRegistry();
        $plugin = $registry->get('mockPlugin');
    }
}
